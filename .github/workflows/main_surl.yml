name: Build and Deploy Node.js App to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Clonar o repositório
      - uses: actions/checkout@v4

      # Passo 2: Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      # Passo 3: Instalar dependências e compilar TypeScript
      - name: Install and Build
        working-directory: ./node-url-shortener
        run: |
          npm install
          npm run build

      # ✅ Passo 4: Adicionar web.config à pasta dist
      - name: Add web.config to dist
        run: |
          echo '<?xml version="1.0" encoding="utf-8"?>\
          <configuration>\
            <system.webServer>\
              <handlers>\
                <add name="iisnode" path="app.js" verb="*" modules="iisnode"/>\
              </handlers>\
              <rewrite>\
                <rules>\
                  <rule name="DynamicContent">\
                    <conditions>\
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>\
                    </conditions>\
                    <action type="Rewrite" url="app.js"/>\
                  </rule>\
                </rules>\
              </rewrite>\
            </system.webServer>\
          </configuration>' > ./node-url-shortener/dist/web.config

      # Passo 5: Upload do build para o job de deploy
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-folder
          path: ./node-url-shortener/dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      # Passo 1: Baixar artifact do job de build
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-folder
          path: ./dist

      # Passo 2: Login no Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}
          auth-type: federated

      # Passo 3: Deploy para o Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'Surl'
          slot-name: 'Production'
          package: ./dist
